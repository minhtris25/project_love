import React, { useEffect, useState } from 'react';
import key1 from '../assets/sound/keyboard-1.mp3';
import key2 from '../assets/sound/keyboard-2.mp3';
import key3 from '../assets/sound/keyboard-3.mp3';
import key4 from '../assets/sound/keyboard-4.mp3';
import key5 from '../assets/sound/keyboard-5.mp3';
import key6 from '../assets/sound/keyboard-6.mp3';

 // ch·ªânh ƒë∆∞·ªùng d·∫´n ƒë√∫ng v·ªõi b·∫°n


const texts = [
 "üíåG·ª≠i ƒë·∫øn em b√© c·ªßa anh,üíåÔ∏è",
 "",
"V·∫≠y l√† m√¨nh ƒë√£ b√™n nhau tr√≤n 1500 ng√†y r·ªìi . üíì",

"Anh v·∫´n c√≤n nh·ªõ nh∆∞ in ng√†y ƒë·∫ßu ti√™n m√† m√¨nh g·∫∑p nhau, r·ªìi n√≥i chuy·ªán l√†m quen , anh c·ª© ng·ª° nh∆∞ m·ªõi h√¥m qua. 1500 n√†y kh√¥ng ph·∫£i l√† m·ªôt con s·ªë tr√≤n trƒ©nh, nh∆∞ng n√≥ l·∫°i ch·ª©a bi·∫øt bao k·ª∑ ni·ªám m√† m√¨nh ƒë√£ c√πng nhau tr·∫£i qua t·ª´ nh·ªØng l·∫ßn m√¨nh c√πng nhau  ƒëi h·ªçc , ƒëi l√†m r·ªìi nh∆∞ng bu·ªïi t·ªëi ch·ªâ t√¢m s·ª± v·ªõi nhau m√† th·ª©c ƒë·∫øn s√°ng v√† c·∫£ nh·ªØng l·∫ßn gi·∫≠n nhau ƒë·∫øn c·∫£ th√°ng tr·ªùi  r·ªìi l·∫°i l√†m l√†nh nh∆∞ ch∆∞a t·ª´ng x√£y ra.üíû",
"",
"C·∫£m ∆°n  em ƒë√£ xu·∫•t hi·ªán trong cu·ªôc ƒë·ªùi anh, ƒë√£ c√πng anh tr√£i qua t·ª´ng ng√†y, t·ª´ng th√°ng, t·ª´ng nƒÉm c√πng nhau. C·∫£m ∆°n em v√¨ ƒë√£ ki√™n nh·∫´n v·ªõi anh. C·∫£m ∆°n em ƒë√£ lu√¥n s·∫µn l√≤ng v·ªã tha cho nh∆∞ng l·ªói m√† anh ƒë√£ g√¢y ra. C·∫£m ∆°n em v√¨ ƒë√£ lu√¥n ·ªü b√™n anh trong nh·ªØng l√∫c anh t·ªìi t·ªá nh·∫•t.  Em ƒë√£ bi·∫øn cu·ªôc s·ªëng c·ªßa anh tr·ªü n√™n ƒë·∫ßy m√†u s·∫Øc v√† √Ω nghƒ©a h∆°n bao gi·ªù h·∫øt.üíó",
"",
"1500 ng√†y ch·ªâ l√† m·ªôt d·∫•u m·ªëc, v√† c√≤n h√†ng ng√†n, h√†ng v·∫°n ng√†y kh√°c ƒëang ch·ªù ch√∫ng ta ph√≠a tr∆∞·ªõc. Anh mong r·∫±ng ch√∫ng ta s·∫Ω lu√¥n n·∫Øm tay nhau th·∫≠t ch·∫∑t, c√πng nhau v∆∞·ª£t qua m·ªçi s√≥ng gi√≥, ƒë·ªÉ m·ªói ng√†y tr√¥i qua ƒë·ªÅu l√† m·ªôt k·ª∑ ni·ªám ƒë·∫πp.üòò ",
"",
"Anh h·ª©a s·∫Ω lu√¥n y√™u th∆∞∆°ng, chƒÉm s√≥c v√† b·∫£o v·ªá em. Anh s·∫Ω l√† ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh, l√† b·ªù vai v·ªØng ch·∫Øc ƒë·ªÉ em d·ª±a v√†o trong nh·ªØng l√∫c kh√≥ khƒÉn. Anh s·∫Ω lu√¥n l·∫Øng nghe v√† th·∫•u hi·ªÉu em, ƒë·ªÉ ch√∫ng ta c√≥ th·ªÉ c√πng nhau v∆∞·ª£t qua m·ªçi th·ª≠ th√°ch.üíù",
"",
"Anh  s·∫Ω m√£i y√™u em,",
"Ng∆∞·ªùi anh th∆∞∆°ng nh·∫•t",
"‚ù§Ô∏èÔ∏èY√™u em!‚ù§Ô∏èÔ∏è"

];

export default function LetterContent({ opened }) {
  const [typedText, setTypedText] = useState('');
  const [currentLine, setCurrentLine] = useState(0);
  const [currentChar, setCurrentChar] = useState(0);

  useEffect(() => {
    if (!opened) return;
    const openTimer = setTimeout(() => setOpened(true), 2000);
    return () => clearTimeout(openTimer);
  }, []);

 useEffect(() => {
  if (!opened || currentLine >= texts.length) return;

  if (currentChar < texts[currentLine].length) {
  const timeout = setTimeout(() => {
    setTypedText(prev => prev + texts[currentLine][currentChar]);
    setCurrentChar(prev => prev + 1);

    // ‚è±Ô∏è ch·ªâ ph√°t √¢m n·∫øu kh√¥ng ph·∫£i d·∫•u c√°ch
    if (texts[currentLine][currentChar] !== ' ') {
      const sounds = [key1, key2, key3, key4, key5, key6];
      const chosen = sounds[Math.floor(Math.random() * sounds.length)];
      const audio = new Audio(chosen);
      audio.volume = 0.15;
      audio.play();
    }
  }, window.innerWidth <= 768 ? 35 : 80); // nhanh h∆°n tr√™n mobile
 // t·ªëc ƒë·ªô g√µ


    
    return () => clearTimeout(timeout);
  } else {
    const timeout = setTimeout(() => {
      setTypedText(prev => prev + '\n');
      setCurrentLine(prev => prev + 1);
      setCurrentChar(0);
    }, 800);

    return () => clearTimeout(timeout);
  }
}, [opened, currentChar, currentLine]);


  return (
    <div className="letter-wrapper">
      {!opened && (
        <div className="envelope">
          <div className="flap" />
          <div className="body" />
        </div>
      )}

      {opened && (
        <div className="paper">
          <div className="typed-text">
            {typedText}
            <span className="blinking-cursor">|</span>
          </div>
        </div>
      )}
    </div>
  );
}
